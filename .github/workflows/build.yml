name: Build Tests and Deploy app

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          
      - name: Restore
        run: dotnet restore ./TechChallenge01.sln
        
      - name: Build
        run: dotnet build ./TechChallenge01.sln --configuration Release --no-restore
        
      - name: Test
        run: dotnet test ./TechChallenge01.sln --configuration Release --no-restore --no-build --collect:"XPlat Code Coverage" --logger trx --results-directory coverage
        
      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: 'coverage/*/coverage.cobertura.xml'
          badge: true
          format: 'markdown'
          output: 'both'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md

      - name: Write to Job Summary
        run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY        
  deploy:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        service: [TechChallenge01.Api, TechChallenge01.TokenApi, TechChallenge01.ApiGateway, TechChallenge01.Infra.Consumer]
    steps:
      - uses: actions/checkout@v4
      - name: Docker Login
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.SECRET_DOCKERHUB }}
          
      - name: Build & Push Docker Images
        uses: docker/build-push-action@v6.7.0
        with:
          context: .
          file: ./src/${{ matrix.service }}/Dockerfile
          tags: 'ciroa/tech-challenge-group43:${{ matrix.service }}-latest'
          push: true
